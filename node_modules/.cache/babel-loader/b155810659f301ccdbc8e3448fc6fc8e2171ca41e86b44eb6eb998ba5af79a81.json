{"ast":null,"code":"var _jsxFileName = \"/Users/sarthakjha/Uni/projects/quizapp/Quiz-Website/src/components/Quiz.js\",\n  _s = $RefreshSig$();\n// src/Quiz.js\n//import quizData from '/Users/sarthakjha/Uni/projects/quizapp/Quiz-Website/src/quiz.json';\n\nimport React, { useState, useEffect } from 'react';\nimport quizData from '/Users/sarthakjha/Uni/projects/quizapp/Quiz-Website/src/quiz.json';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst Quiz = () => {\n  _s();\n  // Initialize state variables with localStorage values or default values\n  const initialCurrentQuestion = parseInt(localStorage.getItem('currentQuestion')) || 0;\n  const initialSelectedOption = localStorage.getItem('selectedOption') || '';\n  const initialScore = parseInt(localStorage.getItem('score')) || 0;\n  const initialShowScore = localStorage.getItem('showScore') === 'true' || false;\n  const initialTimeLeft = parseInt(localStorage.getItem('timeLeft')) || 600; // 600 seconds = 10 minutes\n  const initialTimerExpired = localStorage.getItem('timerExpired') === 'true' || false;\n  const [currentQuestion, setCurrentQuestion] = useState(initialCurrentQuestion);\n  const [selectedOption, setSelectedOption] = useState(initialSelectedOption);\n  const [score, setScore] = useState(initialScore);\n  const [showScore, setShowScore] = useState(initialShowScore);\n  const [timeLeft, setTimeLeft] = useState(initialTimeLeft);\n  const [timerExpired, setTimerExpired] = useState(initialTimerExpired);\n\n  // Update localStorage whenever state variables change\n  useEffect(() => {\n    localStorage.setItem('currentQuestion', currentQuestion.toString());\n    localStorage.setItem('selectedOption', selectedOption);\n    localStorage.setItem('score', score.toString());\n    localStorage.setItem('showScore', showScore.toString());\n    localStorage.setItem('timeLeft', timeLeft.toString());\n    localStorage.setItem('timerExpired', timerExpired.toString());\n  }, [currentQuestion, selectedOption, score, showScore, timeLeft, timerExpired]);\n\n  // Function to handle timer countdown\n  useEffect(() => {\n    let timer = null;\n    if (!timerExpired) {\n      timer = setTimeout(() => {\n        setTimeLeft(prevTime => {\n          if (prevTime === 0) {\n            setTimerExpired(true);\n            setShowScore(true);\n            return prevTime;\n          }\n          return prevTime - 1;\n        });\n      }, 1000);\n    }\n    // Clear timeout on component unmount or when timer expires\n    return () => clearTimeout(timer);\n  }, [timeLeft, timerExpired]);\n  const handleOptionChange = e => {\n    setSelectedOption(e.target.value);\n  };\n  const handleNextQuestion = () => {\n    if (selectedOption === quizData.quiz[currentQuestion].answer) {\n      setScore(score + 1);\n    }\n    setSelectedOption('');\n    const nextQuestion = currentQuestion + 1;\n    if (nextQuestion < quizData.quiz.length) {\n      setCurrentQuestion(nextQuestion);\n    } else {\n      setShowScore(true);\n      setTimerExpired(true); // Stop the timer when quiz is completed\n    }\n  };\n  const handleRestartQuiz = () => {\n    setCurrentQuestion(0);\n    setSelectedOption('');\n    setScore(0);\n    setShowScore(false);\n    setTimeLeft(600); // Reset timer to 10 minutes\n    setTimerExpired(false); // Reset timer expired state\n  };\n\n  // Format time left into minutes and seconds\n  const formatTime = () => {\n    const minutes = Math.floor(timeLeft / 60);\n    const seconds = timeLeft % 60;\n    return `${minutes}:${seconds < 10 ? '0' : ''}${seconds}`;\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      children: /*#__PURE__*/_jsxDEV(\"h2\", {\n        children: [\"Time Left: \", formatTime()]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 89,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 88,\n      columnNumber: 7\n    }, this), showScore ? /*#__PURE__*/_jsxDEV(\"div\", {\n      children: /*#__PURE__*/_jsxDEV(\"h1\", {\n        children: [\"Your Score: \", score, \" / \", quizData.quiz.length]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 93,\n        columnNumber: 11\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 92,\n      columnNumber: 9\n    }, this) : /*#__PURE__*/_jsxDEV(\"div\", {\n      children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n        children: quizData.quiz[currentQuestion].question\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 97,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        children: quizData.quiz[currentQuestion].options.map((option, index) => /*#__PURE__*/_jsxDEV(\"div\", {\n          children: [/*#__PURE__*/_jsxDEV(\"input\", {\n            type: \"radio\",\n            id: `option-${index}`,\n            name: \"quiz-option\",\n            value: option,\n            checked: selectedOption === option,\n            onChange: handleOptionChange\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 101,\n            columnNumber: 17\n          }, this), /*#__PURE__*/_jsxDEV(\"label\", {\n            htmlFor: `option-${index}`,\n            children: option\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 109,\n            columnNumber: 17\n          }, this)]\n        }, index, true, {\n          fileName: _jsxFileName,\n          lineNumber: 100,\n          columnNumber: 15\n        }, this))\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 98,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        onClick: handleNextQuestion,\n        disabled: !selectedOption,\n        children: \"Next\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 113,\n        columnNumber: 11\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 96,\n      columnNumber: 9\n    }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n      onClick: handleRestartQuiz,\n      children: \"Restart Quiz\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 118,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 87,\n    columnNumber: 5\n  }, this);\n};\n_s(Quiz, \"QSDkxJLCxuBzSJVY3llKKy0QEe0=\");\n_c = Quiz;\nexport default Quiz;\nvar _c;\n$RefreshReg$(_c, \"Quiz\");","map":{"version":3,"names":["React","useState","useEffect","quizData","jsxDEV","_jsxDEV","Quiz","_s","initialCurrentQuestion","parseInt","localStorage","getItem","initialSelectedOption","initialScore","initialShowScore","initialTimeLeft","initialTimerExpired","currentQuestion","setCurrentQuestion","selectedOption","setSelectedOption","score","setScore","showScore","setShowScore","timeLeft","setTimeLeft","timerExpired","setTimerExpired","setItem","toString","timer","setTimeout","prevTime","clearTimeout","handleOptionChange","e","target","value","handleNextQuestion","quiz","answer","nextQuestion","length","handleRestartQuiz","formatTime","minutes","Math","floor","seconds","children","fileName","_jsxFileName","lineNumber","columnNumber","question","options","map","option","index","type","id","name","checked","onChange","htmlFor","onClick","disabled","_c","$RefreshReg$"],"sources":["/Users/sarthakjha/Uni/projects/quizapp/Quiz-Website/src/components/Quiz.js"],"sourcesContent":["// src/Quiz.js\n//import quizData from '/Users/sarthakjha/Uni/projects/quizapp/Quiz-Website/src/quiz.json';\n\nimport React, { useState, useEffect } from 'react';\nimport quizData from '/Users/sarthakjha/Uni/projects/quizapp/Quiz-Website/src/quiz.json';\n\nconst Quiz = () => {\n  // Initialize state variables with localStorage values or default values\n  const initialCurrentQuestion = parseInt(localStorage.getItem('currentQuestion')) || 0;\n  const initialSelectedOption = localStorage.getItem('selectedOption') || '';\n  const initialScore = parseInt(localStorage.getItem('score')) || 0;\n  const initialShowScore = localStorage.getItem('showScore') === 'true' || false;\n  const initialTimeLeft = parseInt(localStorage.getItem('timeLeft')) || 600; // 600 seconds = 10 minutes\n  const initialTimerExpired = localStorage.getItem('timerExpired') === 'true' || false;\n\n  const [currentQuestion, setCurrentQuestion] = useState(initialCurrentQuestion);\n  const [selectedOption, setSelectedOption] = useState(initialSelectedOption);\n  const [score, setScore] = useState(initialScore);\n  const [showScore, setShowScore] = useState(initialShowScore);\n  const [timeLeft, setTimeLeft] = useState(initialTimeLeft);\n  const [timerExpired, setTimerExpired] = useState(initialTimerExpired);\n\n  // Update localStorage whenever state variables change\n  useEffect(() => {\n    localStorage.setItem('currentQuestion', currentQuestion.toString());\n    localStorage.setItem('selectedOption', selectedOption);\n    localStorage.setItem('score', score.toString());\n    localStorage.setItem('showScore', showScore.toString());\n    localStorage.setItem('timeLeft', timeLeft.toString());\n    localStorage.setItem('timerExpired', timerExpired.toString());\n  }, [currentQuestion, selectedOption, score, showScore, timeLeft, timerExpired]);\n\n  // Function to handle timer countdown\n  useEffect(() => {\n    let timer = null;\n    if (!timerExpired) {\n      timer = setTimeout(() => {\n        setTimeLeft((prevTime) => {\n          if (prevTime === 0) {\n            setTimerExpired(true);\n            setShowScore(true);\n            return prevTime;\n          }\n          return prevTime - 1;\n        });\n      }, 1000);\n    }\n    // Clear timeout on component unmount or when timer expires\n    return () => clearTimeout(timer);\n  }, [timeLeft, timerExpired]);\n\n  const handleOptionChange = (e) => {\n    setSelectedOption(e.target.value);\n  };\n\n  const handleNextQuestion = () => {\n    if (selectedOption === quizData.quiz[currentQuestion].answer) {\n      setScore(score + 1);\n    }\n    setSelectedOption('');\n    const nextQuestion = currentQuestion + 1;\n    if (nextQuestion < quizData.quiz.length) {\n      setCurrentQuestion(nextQuestion);\n    } else {\n      setShowScore(true);\n      setTimerExpired(true); // Stop the timer when quiz is completed\n    }\n  };\n\n  const handleRestartQuiz = () => {\n    setCurrentQuestion(0);\n    setSelectedOption('');\n    setScore(0);\n    setShowScore(false);\n    setTimeLeft(600); // Reset timer to 10 minutes\n    setTimerExpired(false); // Reset timer expired state\n  };\n\n  // Format time left into minutes and seconds\n  const formatTime = () => {\n    const minutes = Math.floor(timeLeft / 60);\n    const seconds = timeLeft % 60;\n    return `${minutes}:${seconds < 10 ? '0' : ''}${seconds}`;\n  };\n\n  return (\n    <div>\n      <div>\n        <h2>Time Left: {formatTime()}</h2>\n      </div>\n      {showScore ? (\n        <div>\n          <h1>Your Score: {score} / {quizData.quiz.length}</h1>\n        </div>\n      ) : (\n        <div>\n          <h1>{quizData.quiz[currentQuestion].question}</h1>\n          <div>\n            {quizData.quiz[currentQuestion].options.map((option, index) => (\n              <div key={index}>\n                <input\n                  type=\"radio\"\n                  id={`option-${index}`}\n                  name=\"quiz-option\"\n                  value={option}\n                  checked={selectedOption === option}\n                  onChange={handleOptionChange}\n                />\n                <label htmlFor={`option-${index}`}>{option}</label>\n              </div>\n            ))}\n          </div>\n          <button onClick={handleNextQuestion} disabled={!selectedOption}>\n            Next\n          </button>\n        </div>\n      )}\n      <button onClick={handleRestartQuiz}>Restart Quiz</button>\n    </div>\n  );\n};\n\nexport default Quiz;\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}