{"ast":null,"code":"var _jsxFileName = \"/Users/sarthakjha/Uni/projects/quizapp/Quiz-Website/src/components/Quiz.js\",\n  _s = $RefreshSig$();\n// src/Quiz.js\n//import quizData from '/Users/sarthakjha/Uni/projects/quizapp/Quiz-Website/src/quiz.json';\n\nimport React, { useState, useEffect } from 'react';\nimport quizData from '/Users/sarthakjha/Uni/projects/quizapp/Quiz-Website/src/quiz.json';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst Quiz = () => {\n  _s();\n  const [currentQuestion, setCurrentQuestion] = useState(parseInt(localStorage.getItem('currentQuestion')) || 0);\n  const [selectedOption, setSelectedOption] = useState(localStorage.getItem('selectedOption') || '');\n  const [score, setScore] = useState(parseInt(localStorage.getItem('score')) || 0);\n  const [showScore, setShowScore] = useState(localStorage.getItem('showScore') === 'true' || false);\n  const [timeLeft, setTimeLeft] = useState(parseInt(localStorage.getItem('timeLeft')) || 600); // 600 seconds = 10 minutes\n  const [timerExpired, setTimerExpired] = useState(localStorage.getItem('timerExpired') === 'true' || false);\n  const [isFullScreen, setIsFullScreen] = useState(localStorage.getItem('isFullScreen') === 'true' || false);\n\n  // Initialize full-screen mode\n  useEffect(() => {\n    const handleFullScreenChange = () => {\n      setIsFullScreen(document.fullscreenElement !== null);\n    };\n    document.addEventListener('fullscreenchange', handleFullScreenChange);\n    return () => {\n      document.removeEventListener('fullscreenchange', handleFullScreenChange);\n    };\n  }, []);\n\n  // Request full-screen mode\n  const requestFullScreen = () => {\n    const element = document.documentElement;\n    if (element.requestFullscreen) {\n      element.requestFullscreen();\n    } else if (element.mozRequestFullScreen) {\n      /* Firefox */\n      element.mozRequestFullScreen();\n    } else if (element.webkitRequestFullscreen) {\n      /* Chrome, Safari and Opera */\n      element.webkitRequestFullscreen();\n    } else if (element.msRequestFullscreen) {\n      /* IE/Edge */\n      element.msRequestFullscreen();\n    }\n  };\n\n  // Update localStorage whenever state variables change\n  useEffect(() => {\n    localStorage.setItem('currentQuestion', currentQuestion.toString());\n    localStorage.setItem('selectedOption', selectedOption);\n    localStorage.setItem('score', score.toString());\n    localStorage.setItem('showScore', showScore.toString());\n    localStorage.setItem('timeLeft', timeLeft.toString());\n    localStorage.setItem('timerExpired', timerExpired.toString());\n    localStorage.setItem('isFullScreen', isFullScreen.toString());\n  }, [currentQuestion, selectedOption, score, showScore, timeLeft, timerExpired, isFullScreen]);\n\n  // Function to handle timer countdown\n  useEffect(() => {\n    let timer = null;\n    if (!timerExpired) {\n      timer = setTimeout(() => {\n        setTimeLeft(prevTime => {\n          if (prevTime === 0) {\n            setTimerExpired(true);\n            setShowScore(true);\n            return prevTime;\n          }\n          return prevTime - 1;\n        });\n      }, 1000);\n    }\n    // Clear timeout on component unmount or when timer expires\n    return () => clearTimeout(timer);\n  }, [timeLeft, timerExpired]);\n  const handleOptionChange = e => {\n    setSelectedOption(e.target.value);\n  };\n  const handleNextQuestion = () => {\n    if (selectedOption === quizData.quiz[currentQuestion].answer) {\n      setScore(score + 1);\n    }\n    setSelectedOption('');\n    const nextQuestion = currentQuestion + 1;\n    if (nextQuestion < quizData.quiz.length) {\n      setCurrentQuestion(nextQuestion);\n    } else {\n      setShowScore(true);\n      setTimerExpired(true); // Stop the timer when quiz is completed\n    }\n  };\n  const handleRestartQuiz = () => {\n    setCurrentQuestion(0);\n    setSelectedOption('');\n    setScore(0);\n    setShowScore(false);\n    setTimeLeft(600); // Reset timer to 10 minutes\n    setTimerExpired(false); // Reset timer expired state\n    requestFullScreen(); // Request full-screen again on restart\n  };\n\n  // Format time left into minutes and seconds\n  const formatTime = () => {\n    const minutes = Math.floor(timeLeft / 60);\n    const seconds = timeLeft % 60;\n    return `${minutes}:${seconds < 10 ? '0' : ''}${seconds}`;\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [!isFullScreen && /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"fullscreen-popup\",\n      children: [/*#__PURE__*/_jsxDEV(\"p\", {\n        children: \"Please enter full-screen mode to take the quiz.\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 122,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        onClick: requestFullScreen,\n        children: \"Enter Full-Screen\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 123,\n        columnNumber: 11\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 121,\n      columnNumber: 9\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: isFullScreen ? '' : 'hidden',\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        children: /*#__PURE__*/_jsxDEV(\"h2\", {\n          children: [\"Time Left: \", formatTime()]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 128,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 127,\n        columnNumber: 9\n      }, this), showScore ? /*#__PURE__*/_jsxDEV(\"div\", {\n        children: /*#__PURE__*/_jsxDEV(\"h1\", {\n          children: [\"Your Score: \", score, \" / \", quizData.quiz.length]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 132,\n          columnNumber: 13\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 131,\n        columnNumber: 11\n      }, this) : /*#__PURE__*/_jsxDEV(\"div\", {\n        children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n          children: quizData.quiz[currentQuestion].question\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 136,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          children: quizData.quiz[currentQuestion].options.map((option, index) => /*#__PURE__*/_jsxDEV(\"div\", {\n            children: [/*#__PURE__*/_jsxDEV(\"input\", {\n              type: \"radio\",\n              id: `option-${index}`,\n              name: \"quiz-option\",\n              value: option,\n              checked: selectedOption === option,\n              onChange: handleOptionChange\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 140,\n              columnNumber: 19\n            }, this), /*#__PURE__*/_jsxDEV(\"label\", {\n              htmlFor: `option-${index}`,\n              children: option\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 148,\n              columnNumber: 19\n            }, this)]\n          }, index, true, {\n            fileName: _jsxFileName,\n            lineNumber: 139,\n            columnNumber: 17\n          }, this))\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 137,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n          onClick: handleNextQuestion,\n          disabled: !selectedOption,\n          children: \"Next\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 152,\n          columnNumber: 13\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 135,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        onClick: handleRestartQuiz,\n        children: \"Restart Quiz\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 157,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 126,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 119,\n    columnNumber: 5\n  }, this);\n};\n_s(Quiz, \"HgU3VdTPTd2BrblfSoinafZPvNU=\");\n_c = Quiz;\nexport default Quiz;\nvar _c;\n$RefreshReg$(_c, \"Quiz\");","map":{"version":3,"names":["React","useState","useEffect","quizData","jsxDEV","_jsxDEV","Quiz","_s","currentQuestion","setCurrentQuestion","parseInt","localStorage","getItem","selectedOption","setSelectedOption","score","setScore","showScore","setShowScore","timeLeft","setTimeLeft","timerExpired","setTimerExpired","isFullScreen","setIsFullScreen","handleFullScreenChange","document","fullscreenElement","addEventListener","removeEventListener","requestFullScreen","element","documentElement","requestFullscreen","mozRequestFullScreen","webkitRequestFullscreen","msRequestFullscreen","setItem","toString","timer","setTimeout","prevTime","clearTimeout","handleOptionChange","e","target","value","handleNextQuestion","quiz","answer","nextQuestion","length","handleRestartQuiz","formatTime","minutes","Math","floor","seconds","children","className","fileName","_jsxFileName","lineNumber","columnNumber","onClick","question","options","map","option","index","type","id","name","checked","onChange","htmlFor","disabled","_c","$RefreshReg$"],"sources":["/Users/sarthakjha/Uni/projects/quizapp/Quiz-Website/src/components/Quiz.js"],"sourcesContent":["// src/Quiz.js\n//import quizData from '/Users/sarthakjha/Uni/projects/quizapp/Quiz-Website/src/quiz.json';\n\nimport React, { useState, useEffect } from 'react';\nimport quizData from '/Users/sarthakjha/Uni/projects/quizapp/Quiz-Website/src/quiz.json';\n\nconst Quiz = () => {\n  const [currentQuestion, setCurrentQuestion] = useState(\n    parseInt(localStorage.getItem('currentQuestion')) || 0\n  );\n  const [selectedOption, setSelectedOption] = useState(\n    localStorage.getItem('selectedOption') || ''\n  );\n  const [score, setScore] = useState(parseInt(localStorage.getItem('score')) || 0);\n  const [showScore, setShowScore] = useState(\n    localStorage.getItem('showScore') === 'true' || false\n  );\n  const [timeLeft, setTimeLeft] = useState(parseInt(localStorage.getItem('timeLeft')) || 600); // 600 seconds = 10 minutes\n  const [timerExpired, setTimerExpired] = useState(\n    localStorage.getItem('timerExpired') === 'true' || false\n  );\n  const [isFullScreen, setIsFullScreen] = useState(\n    localStorage.getItem('isFullScreen') === 'true' || false\n  );\n\n  // Initialize full-screen mode\n  useEffect(() => {\n    const handleFullScreenChange = () => {\n      setIsFullScreen(document.fullscreenElement !== null);\n    };\n\n    document.addEventListener('fullscreenchange', handleFullScreenChange);\n\n    return () => {\n      document.removeEventListener('fullscreenchange', handleFullScreenChange);\n    };\n  }, []);\n\n  // Request full-screen mode\n  const requestFullScreen = () => {\n    const element = document.documentElement;\n    if (element.requestFullscreen) {\n      element.requestFullscreen();\n    } else if (element.mozRequestFullScreen) { /* Firefox */\n      element.mozRequestFullScreen();\n    } else if (element.webkitRequestFullscreen) { /* Chrome, Safari and Opera */\n      element.webkitRequestFullscreen();\n    } else if (element.msRequestFullscreen) { /* IE/Edge */\n      element.msRequestFullscreen();\n    }\n  };\n\n  // Update localStorage whenever state variables change\n  useEffect(() => {\n    localStorage.setItem('currentQuestion', currentQuestion.toString());\n    localStorage.setItem('selectedOption', selectedOption);\n    localStorage.setItem('score', score.toString());\n    localStorage.setItem('showScore', showScore.toString());\n    localStorage.setItem('timeLeft', timeLeft.toString());\n    localStorage.setItem('timerExpired', timerExpired.toString());\n    localStorage.setItem('isFullScreen', isFullScreen.toString());\n  }, [currentQuestion, selectedOption, score, showScore, timeLeft, timerExpired, isFullScreen]);\n\n  // Function to handle timer countdown\n  useEffect(() => {\n    let timer = null;\n    if (!timerExpired) {\n      timer = setTimeout(() => {\n        setTimeLeft((prevTime) => {\n          if (prevTime === 0) {\n            setTimerExpired(true);\n            setShowScore(true);\n            return prevTime;\n          }\n          return prevTime - 1;\n        });\n      }, 1000);\n    }\n    // Clear timeout on component unmount or when timer expires\n    return () => clearTimeout(timer);\n  }, [timeLeft, timerExpired]);\n\n  const handleOptionChange = (e) => {\n    setSelectedOption(e.target.value);\n  };\n\n  const handleNextQuestion = () => {\n    if (selectedOption === quizData.quiz[currentQuestion].answer) {\n      setScore(score + 1);\n    }\n    setSelectedOption('');\n    const nextQuestion = currentQuestion + 1;\n    if (nextQuestion < quizData.quiz.length) {\n      setCurrentQuestion(nextQuestion);\n    } else {\n      setShowScore(true);\n      setTimerExpired(true); // Stop the timer when quiz is completed\n    }\n  };\n\n  const handleRestartQuiz = () => {\n    setCurrentQuestion(0);\n    setSelectedOption('');\n    setScore(0);\n    setShowScore(false);\n    setTimeLeft(600); // Reset timer to 10 minutes\n    setTimerExpired(false); // Reset timer expired state\n    requestFullScreen(); // Request full-screen again on restart\n  };\n\n  // Format time left into minutes and seconds\n  const formatTime = () => {\n    const minutes = Math.floor(timeLeft / 60);\n    const seconds = timeLeft % 60;\n    return `${minutes}:${seconds < 10 ? '0' : ''}${seconds}`;\n  };\n\n  return (\n    <div>\n      {!isFullScreen && (\n        <div className=\"fullscreen-popup\">\n          <p>Please enter full-screen mode to take the quiz.</p>\n          <button onClick={requestFullScreen}>Enter Full-Screen</button>\n        </div>\n      )}\n      <div className={isFullScreen ? '' : 'hidden'}>\n        <div>\n          <h2>Time Left: {formatTime()}</h2>\n        </div>\n        {showScore ? (\n          <div>\n            <h1>Your Score: {score} / {quizData.quiz.length}</h1>\n          </div>\n        ) : (\n          <div>\n            <h1>{quizData.quiz[currentQuestion].question}</h1>\n            <div>\n              {quizData.quiz[currentQuestion].options.map((option, index) => (\n                <div key={index}>\n                  <input\n                    type=\"radio\"\n                    id={`option-${index}`}\n                    name=\"quiz-option\"\n                    value={option}\n                    checked={selectedOption === option}\n                    onChange={handleOptionChange}\n                  />\n                  <label htmlFor={`option-${index}`}>{option}</label>\n                </div>\n              ))}\n            </div>\n            <button onClick={handleNextQuestion} disabled={!selectedOption}>\n              Next\n            </button>\n          </div>\n        )}\n        <button onClick={handleRestartQuiz}>Restart Quiz</button>\n      </div>\n    </div>\n  );\n};\n\nexport default Quiz;\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}